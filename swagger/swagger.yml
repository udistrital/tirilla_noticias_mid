swagger: "2.0"
info:
  title: beego Test API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /noticia-mid/:
    get:
      tags:
      - noticia-mid
      description: get Crear_noticia
      operationId: Crear_noticiaController.GetAll
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Crear_noticia'
        "403":
          description: ""
    post:
      tags:
      - noticia-mid
      description: create Crear_noticia
      operationId: Crear_noticiaController.Create
      parameters:
      - in: body
        name: body
        description: body for Crear_noticia content
        required: true
        schema:
          $ref: '#/definitions/models.Crear_noticia'
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/models.Crear_noticia'
        "403":
          description: body is empty
  /noticia-mid/{id}:
    get:
      tags:
      - noticia-mid
      description: get Crear_noticia by id
      operationId: Crear_noticiaController.GetOne
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Crear_noticia'
        "403":
          description: :id is empty
    put:
      tags:
      - noticia-mid
      description: update the Crear_noticia
      operationId: Crear_noticiaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Crear_noticia content
        required: true
        schema:
          $ref: '#/definitions/models.Crear_noticia'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Crear_noticia'
        "403":
          description: :id is not int
    delete:
      tags:
      - noticia-mid
      description: delete the Crear_noticia
      operationId: Crear_noticiaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /noticia-mid/lista:
    get:
      tags:
      - noticia-mid
      description: get all Noticias with Etiquetas and Contenido
      operationId: Crear_noticiaController.GetAllLista
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/interface{}'
        "403":
          description: ""
definitions:
  interface{}:
    title: interface{}
    type: object
  models.Crear_noticia:
    title: Crear_noticia
    type: object
tags:
- name: noticia-mid
  description: |
    Crear_noticiaController operations for Crear_noticia
